name: Python Checks

on:
  pull_request:
    branches:
      - "main"
      - "dev"

permissions:
  checks: write
  contents: read
  pull-requests: write

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint Module (black, flake8, isort)
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            dev-requirements.txt
            tests/requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[ci]"
      - uses: psf/black@stable
        with:
          options: --check --verbose --color
          src: "./vminfo_parser"
      - name: Setup flake8 annotations
        uses: rbialon/flake8-annotations@v1
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 ./vminfo_parser --count --show-source --statistics
      - name: Check imports with isort
        run: |
          isort -c --diff ./vminfo_parser
  test:
    runs-on: ubuntu-latest
    name: Run pytest and report test coverage
    permissions:
      checks: write
      contents: read
      issues: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            tests/requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[ci]"
          pip install pytest-github-actions-annotate-failures
      - name: Tests
        id: pytest
        run: |
          py.test --cov-report=xml --showlocals -vv

      - name: Pytest coverage comment
        if: ${{ success() || (failure() && steps.pytest.conclusion == 'failure') }}
        continue-on-error: true
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-xml-coverage-path: coverage.xml
          junitxml-path: ./.pytest.xml
  build:
    runs-on: ubuntu-latest
    name: Test Build
    needs: test
    steps:
      # Note: we need to checkout the repository at the workflow sha in case during the workflow
      # the branch was updated. To keep PSR working with the configured release branches,
      # we force a checkout of the desired release branch but at the workflow sha HEAD.
      - name: Setup | Checkout Repository at workflow sha
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.sha }}

      - name: Setup | Force correct release branch on workflow sha
        run: |
          git checkout -B ${{ github.base_ref }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Python Semantic Release - build
        id: build
        uses: python-semantic-release/python-semantic-release@v9
        with:
          github_token: ${{ github.token }}
          changelog: false
          prerelease: true
          commit: false
          tag: false
          push: false
          build_metadata: "pr${{github.event.number}}.${{github.run_number}}"
      - uses: actions/upload-artifact@v4
        with:
          name: build ${{steps.build.outputs.version}}
          path: dist/
